# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestadminaddprodect():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testadminaddprodect(self):
    self.driver.get("http://localhost:3000/admin")
    self.driver.set_window_size(1440, 812)
    self.driver.find_element(By.LINK_TEXT, "New Product").click()
    # self.driver.find_element(By.CSS_SELECTOR, "a.flex.justify-left").click()
    self.driver.find_element(By.ID, "name").click()
    self.driver.find_element(By.ID, "name").send_keys("test")
    self.driver.find_element(By.ID, "sku").click()
    self.driver.find_element(By.ID, "sku").send_keys("test")
    self.driver.find_element(By.ID, "price").click()
    self.driver.find_element(By.ID, "price").send_keys("10")
    self.driver.find_element(By.ID, "weight").click()
    self.driver.find_element(By.ID, "weight").send_keys("1")
    self.driver.find_element(By.LINK_TEXT, "Select category").click()
    element = self.driver.find_element(By.LINK_TEXT, "Select category")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".grid:nth-child(1) > .col-span-3 > .button").click()
    self.driver.find_element(By.ID, "tax_class").click()
    dropdown = self.driver.find_element(By.ID, "tax_class")
    dropdown.find_element(By.XPATH, "//option[. = 'Taxable Goods']").click()
    self.driver.find_element(By.ID, "urlKey").click()
    self.driver.find_element(By.ID, "urlKey").send_keys("https://img.freepik.com/photos-premium/flacon-parfum-elegance-noir-or-generative-ai_431161-17493.jpg")
    self.driver.find_element(By.ID, "metaTitle").click()
    self.driver.find_element(By.ID, "metaTitle").send_keys("test")
    self.driver.find_element(By.ID, "metaKeywords").click()
    self.driver.find_element(By.ID, "metaKeywords").send_keys("test")
    self.driver.find_element(By.ID, "meta_description").click()
    self.driver.find_element(By.ID, "meta_description").send_keys("test disc")
    self.driver.find_element(By.CSS_SELECTOR, ".card:nth-child(1) > .card-section:nth-child(2) .field-wrapper > div:nth-child(1) > .flex").click()
    self.driver.find_element(By.CSS_SELECTOR, ".card:nth-child(1) > .card-section:nth-child(2) > .card-session-content > .form-field-container > .field-wrapper > div:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > .flex > .radio-unchecked").click()
    self.driver.find_element(By.CSS_SELECTOR, ".card:nth-child(1) > .card-section:nth-child(3) .radio-unchecked").click()
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > .flex > .radio-unchecked").click()
    self.driver.find_element(By.CSS_SELECTOR, ".card:nth-child(2) > .card-section:nth-child(2) .radio-unchecked").click()
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > .flex > .radio-unchecked").click()
    self.driver.find_element(By.CSS_SELECTOR, ".card:nth-child(2) > .card-section:nth-child(3) .form-field-container div:nth-child(1) .pl-4").click()
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > .flex > .radio-unchecked").click()
    self.driver.find_element(By.ID, "qty").click()
    self.driver.find_element(By.ID, "qty").send_keys("2")
    self.driver.find_element(By.ID, "group_id").click()
    self.driver.find_element(By.ID, "attributes[0][value]").click()
    dropdown = self.driver.find_element(By.ID, "attributes[0][value]")
    dropdown.find_element(By.XPATH, "//option[. = 'Black']").click()
    self.driver.find_element(By.ID, "attributes[1][value]").click()
    dropdown = self.driver.find_element(By.ID, "attributes[1][value]")
    dropdown.find_element(By.XPATH, "//option[. = 'SM']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-span-1").click()
    self.driver.find_element(By.CSS_SELECTOR, ".primary > span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-span-2 > .card:nth-child(1) > .card-section").click()
    self.driver.find_element(By.ID, "sku").send_keys("1234F")
    self.driver.find_element(By.CSS_SELECTOR, ".primary").click()
    self.driver.find_element(By.ID, "urlKey").click()
    self.driver.find_element(By.ID, "urlKey").click()
    element = self.driver.find_element(By.ID, "urlKey")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "urlKey").click()
    self.driver.find_element(By.ID, "urlKey").send_keys("dfgrgqfg")
    self.driver.find_element(By.CSS_SELECTOR, ".primary > span").click()
  
